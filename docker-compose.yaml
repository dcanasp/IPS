services:
  ips:
    build:
      context: ./IPS
      dockerfile: Dockerfile
    container_name: ips
    ports:
      - "8000:8080"
    networks:
      - cyber

  victim:
    build:
      context: ./victim
      dockerfile: Dockerfile  
    container_name: victim
    expose:
      - "8080"
    networks:
      - cyber
  attacker1:
    build:
      context: ./attackers/attacker
    environment:
      - target_host=http://ips:8080
      - target_routes=/
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2
  exploration-attacker:
    build:
      context: ./attackers/exploration
    environment:
      - target_host=http://ips:8080
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2
  slower-attacker:
    build:
      context: ./attackers/slowerFaster
    environment:
      - target_host=http://ips:8080
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2
  error-attacker:
    build:
      context: ./attackers/error
    environment:
      - target_host=http://ips:8080
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2
  hijacker-attacker:
    build:
      context: ./attackers/hijacker
    environment:
      - target_host=http://ips:8080
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2
  bruteForce-attacker:
    build:
      context: ./attackers/bruteForce
    environment:
      - target_host=http://ips:8080
      - concurrency=1
    networks:
      - cyber 
    depends_on:
      - victim
    deploy:
      replicas: 2


    




  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      # Mount Loki's config from your host. Use absolute path for robustness on Windows.
      - C:\David\nacional\crypto\project\Monitoring\loki-config.yaml:/etc/loki/local-config.yaml
      # Persistent volume for Loki's data. This is good for stability.
      - loki_data:/tmp/loki # This will create a named Docker volume for Loki's data
    networks:
      - cyber

  grafana-alloy:
    image: grafana/alloy:latest
    container_name: grafana-alloy
    volumes:
      # Mount Alloy's config from your host.
      - ./Monitoring/alloy-config.alloy:/etc/alloy/config.alloy
      # This is the volume to access your COPIED logs.
      # You need to create a folder on your host, e.g., 'C:\David\nacional\crypto\project\copied_logs\'
      # and place 'copied-victim-logs.json' inside it after docker cp.
      - C:\David\nacional\crypto\project\copied_logs:/mnt/logs_to_process:ro # Read-only mount
    command: run /etc/alloy/config.alloy
    depends_on:
      - loki # Alloy needs Loki to push logs to
      # No dependency on victim here, as it reads from a host volume.
    networks:
      - cyber

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      # Persistent volume for Grafana's data.
      - grafana_data:/var/lib/grafana # This will create a named Docker volume for Grafana's data
    depends_on:
      - loki
    networks:
      - cyber

volumes:
  loki_data: # Declare the named volume for Loki's internal data
  grafana_data: # Declare the named volume for Grafana's data

networks:
  cyber:
    driver: bridge
